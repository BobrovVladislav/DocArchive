generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  password String
  role     Role @default(user)

  photo       String?
  firstName   String
  middleName  String
  lastName    String?
  gender      String?
  birthDate   DateTime?
  department  String 
  manager     String
  position    String
  contactInfo ContactInfo?
  permissions Permission? 
  versions    DocumentVersion[]
  messages    Message[]
}

model ContactInfo {
  id                     Int     @id @default(autoincrement())
  userId                 Int     @unique
  email                  String
  preferredContactMethod String?
  phone                  String?
  user                   User    @relation(fields: [userId], references: [id], onDelete: Cascade )
}

model Permission {
  id          Int     @id @default(autoincrement())
  userId      Int     @unique
  canEdit     Boolean @default(false)
  canDelete   Boolean @default(false)
  canDownload Boolean @default(false)
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Document {
  id          Int      @id @default(autoincrement())
  uuid        String   @unique @default(uuid())
  name        String
  type        String
  description String?
  tags        String[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt

  histories   DocumentVersion[]
  messages    Message[]
}

model DocumentVersion {
  id          Int              @id @default(autoincrement())
  documentId  Int
  authorId    Int
  version     Int  @default(1)
  url         String?
  size        Int
  status      Status @default(new)
  createdAt   DateTime         @default(now())

  document    Document         @relation(fields: [documentId], references: [id], onDelete: Cascade)
  author      User             @relation(fields: [authorId], references: [id])
}

model Message {
  id          Int      @id @default(autoincrement())
  documentId  Int
  userId      Int
  content     String
  createdAt   DateTime @default(now())

  document    Document @relation(fields: [documentId], references: [id], onDelete: Cascade)
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  admin
  user
}

enum Status {
  new
  progress
  review
  correction
  rejected
  approved
}